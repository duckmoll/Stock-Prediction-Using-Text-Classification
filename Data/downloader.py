import pandas as pd

# import nest_asyncio
# nest_asyncio.apply()


tickers = ['MMM', 'ABT', 'ABBV', 'ABMD', 'ACN', 'ATVI',
           'ADBE', 'AMD', 'AAP', 'AES', 'AFL', 'A', 'APD',
           'AKAM', 'ALK', 'ALB', 'ARE', 'ALGN', 'ALLE', 'LNT',
           'ALL', 'GOOGL', 'GOOG', 'MO', 'AMZN', 'AMCR', 'AEE',
           'AAL', 'AEP', 'AXP', 'AIG', 'AMT', 'AWK', 'AMP', 'ABC',
           'AME', 'AMGN', 'APH', 'ADI', 'ANSS', 'ANTM', 'AON',
           'AOS', 'APA', 'AAPL', 'AMAT', 'APTV', 'ADM', 'ANET',
           'AJG', 'AIZ', 'T', 'ATO', 'ADSK', 'ADP', 'AZO', 'AVB',
           'AVY', 'BKR', 'BLL', 'BAC', 'BBWI', 'BAX', 'BDX',
           'BBY', 'BIO', 'TECH', 'BIIB', 'BLK', 'BK', 'BA', 'BKNG',
           'BWA', 'BXP', 'BSX', 'BMY', 'AVGO', 'BR', 'BRO',
           'CHRW', 'CDNS', 'CZR', 'CPB', 'COF', 'CAH', 'KMX', 'CCL',
           'CARR', 'CTLT', 'CAT', 'CBOE', 'CBRE', 'CDW', 'CE', 'CNC',
           'CNP', 'CDAY', 'CERN', 'CF', 'CRL', 'SCHW', 'CHTR', 'CVX',
           'CMG', 'CB', 'CHD', 'CI', 'CINF', 'CTAS', 'CSCO', 'C', 'CFG',
           'CTXS', 'CLX', 'CME', 'CMS', 'KO', 'CTSH', 'CL', 'CMCSA',
           'CMA', 'CAG', 'COP', 'ED', 'STZ', 'COO', 'CPRT', 'GLW',
           'CTVA', 'COST', 'CTRA', 'CCI', 'CSX', 'CMI', 'CVS', 'DHI',
           'DHR', 'DRI', 'DVA', 'DE', 'DAL', 'XRAY', 'DVN', 'DXCM',
           'FANG', 'DLR', 'DFS', 'DISCA', 'DISCK', 'DISH', 'DG',
           'DLTR', 'D', 'DPZ', 'DOV', 'DOW', 'DTE', 'DUK', 'DRE',
           'DD', 'DXC', 'EMN', 'ETN', 'EBAY', 'ECL', 'EIX', 'EW',
           'EA', 'EMR', 'ENPH', 'ETR', 'EOG', 'EFX', 'EQIX', 'EQR',
           'ESS', 'EL', 'ETSY', 'EVRG', 'ES', 'RE', 'EXC', 'EXPE',
           'EXPD', 'EXR', 'XOM', 'FFIV', 'FB', 'FAST', 'FRT', 'FDX',
           'FIS', 'FITB', 'FE', 'FRC', 'FISV', 'FLT', 'FMC', 'F',
           'FTNT', 'FTV', 'FBHS', 'FOXA', 'FOX', 'BEN', 'FCX',
           'GPS', 'GRMN', 'IT', 'GNRC', 'GD', 'GE', 'GIS', 'GM',
           'GPC', 'GILD', 'GL', 'GPN', 'GS', 'GWW', 'HAL', 'HBI',
           'HIG', 'HAS', 'HCA', 'PEAK', 'HSIC', 'HSY', 'HES', 'HPE',
           'HLT', 'HOLX', 'HD', 'HON', 'HRL', 'HST', 'HWM', 'HPQ',
           'HUM', 'HBAN', 'HII', 'IEX', 'IDXX', 'INFO', 'ITW', 'ILMN', 'INCY',
           'IR', 'INTC', 'ICE', 'IBM', 'IP', 'IPG', 'IFF', 'INTU', 'ISRG', 'IVZ',
           'IPGP', 'IQV', 'IRM', 'JKHY', 'J', 'JBHT', 'SJM', 'JNJ', 'JCI',
           'JPM', 'JNPR', 'KSU', 'K', 'KEY', 'KEYS', 'KMB', 'KIM', 'KMI',
           'KLAC', 'KHC', 'KR', 'LHX', 'LH', 'LRCX', 'LW', 'LVS', 'LEG',
           'LDOS', 'LEN', 'LLY', 'LNC', 'LIN', 'LYV', 'LKQ', 'LMT', 'L', 'LOW',
           'LUMN', 'LYB', 'MTB', 'MRO', 'MPC', 'MKTX', 'MAR', 'MMC', 'MLM', 'MAS',
           'MA', 'MTCH', 'MKC', 'MCD', 'MCK', 'MDT', 'MRK', 'MET', 'MTD', 'MGM', 'MCHP',
           'MU', 'MSFT', 'MAA', 'MRNA', 'MHK', 'TAP', 'MDLZ', 'MPWR', 'MNST', 'MCO',
           'MS', 'MOS', 'MSI', 'MSCI', 'NDAQ', 'NTAP', 'NFLX', 'NWL', 'NEM', 'NWSA',
           'NWS', 'NEE', 'NLSN', 'NKE', 'NI', 'NSC', 'NTRS', 'NOC', 'NLOK', 'NCLH',
           'NRG', 'NUE', 'NVDA', 'NVR', 'NXPI', 'ORLY', 'OXY', 'ODFL', 'OMC', 'OKE',
           'ORCL', 'OGN', 'OTIS', 'PCAR', 'PKG', 'PH', 'PAYX', 'PAYC', 'PYPL', 'PENN',
           'PNR', 'PBCT', 'PEP', 'PKI', 'PFE', 'PM', 'PSX', 'PNW', 'PXD', 'PNC', 'POOL',
           'PPG', 'PPL', 'PFG', 'PG', 'PGR', 'PLD', 'PRU', 'PTC', 'PEG', 'PSA', 'PHM',
           'PVH', 'QRVO', 'PWR', 'QCOM', 'DGX', 'RL', 'RJF', 'RTX', 'O', 'REG', 'REGN',
           'RF', 'RSG', 'RMD', 'RHI', 'ROK', 'ROL', 'ROP', 'ROST', 'RCL', 'SPGI', 'CRM',
           'SBAC', 'SLB', 'STX', 'SEE', 'SRE', 'NOW', 'SHW', 'SPG', 'SWKS', 'SNA',
           'SO', 'LUV', 'SWK', 'SBUX', 'STT', 'STE', 'SYK', 'SIVB', 'SYF', 'SNPS',
           'SYY', 'TMUS', 'TROW', 'TTWO', 'TPR', 'TGT', 'TEL', 'TDY', 'TFX', 'TER',
           'TSLA', 'TXN', 'TXT', 'TMO', 'TJX', 'TSCO', 'TT', 'TDG', 'TRV', 'TRMB',
           'TFC', 'TWTR', 'TYL', 'TSN', 'UDR', 'ULTA', 'USB', 'UAA', 'UA', 'UNP',
           'UAL', 'UNH', 'UPS', 'URI', 'UHS', 'VLO', 'VTR', 'VRSN', 'VRSK', 'VZ',
           'VRTX', 'VFC', 'VIAC', 'VTRS', 'V', 'VNO', 'VMC', 'WRB', 'WAB', 'WMT', 'WBA',
           'DIS', 'WM', 'WAT', 'WEC', 'WFC', 'WELL', 'WST', 'WDC', 'WU', 'WRK', 'WY',
           'WHR', 'WMB', 'WLTW', 'WYNN', 'XEL', 'XLNX', 'XYL', 'YUM', 'ZBRA', 'ZBH', 'ZION', 'ZTS']

ciks = set(['66740', '1800', '1551152', '815094', '1467373', '718877', '796343', '2488', '1158449', '874761', '4977',
            '1090872', '2969', '1086222', '766421', '915913', '1035443', '1097149', '1579241', '352541', '899051',
            '1652044', '1652044', '764180', '1018724', '1748790', '1002910', '6201', '4904', '4962', '5272', '1053507',
            '1410636', '820027', '1140859', '1037868', '318154', '820313', '6281', '1013462', '1156039', '315293',
            '91142', '6769', '320193', '6951', '1521332', '7084', '1596532', '354190', '1267238', '732717', '731802',
            '769397', '8670', '866787', '915912', '8818', '1701605', '9389', '70858', '701985', '10456', '10795',
            '1067983', '764478', '12208', '842023', '875045', '1364742', '1390777', '12927', '1075531', '908255',
            '1037540', '885725', '14272', '1730168', '1383312', '79282', '14693', '1043277', '813672', '1590895',
            '16732', '927628', '721371', '1170010', '815097', '1783180', '1596783', '18230', '1374310', '1138118',
            '1402057', '1306830', '1071739', '1130310', '1725057', '804753', '1324404', '1100682', '316709', '1091667',
            '93410', '1058090', '896159', '313927', '1739940', '20286', '723254', '858877', '831001', '759944',
            '877890', '21076', '1156375', '811156', '21344', '1058290', '21665', '1166691', '28412', '23217', '1163165',
            '1047862', '16918', '711404', '900075', '24741', '1755672', '909832', '858470', '1051470', '277948',
            '26172', '64803', '882184', '313616', '940944', '927066', '315189', '27904', '818479', '1090012', '1093557',
            '1539838', '1297996', '1393612', '1437107', '1437107', '1001082', '29534', '935703', '715957', '1286681',
            '29905', '1751788', '936340', '1326160', '783280', '1666700', '1688568', '915389', '1551182', '1065088',
            '31462', '827052', '1099800', '712515', '32604', '1463101', '65984', '821189', '33185', '1101239', '906107',
            '920522', '1001250', '1370637', '1711269', '72741', '1095073', '1109357', '1324424', '746515', '1289490',
            '34088', '1048695', '1326801', '815556', '34903', '1048911', '1136893', '35527', '1031296', '1132979',
            '798354', '1175454', '37785', '37996', '1262039', '1659166', '1519751', '1754301', '1754301', '38777',
            '831259', '39911', '1121788', '749251', '1474735', '40533', '40545', '40704', '1467858', '40987', '882095',
            '320335', '1123360', '886982', '277135', '45012', '1359841', '874766', '46080', '860730', '765880',
            '1000228', '47111', '4447', '1645590', '1585689', '859737', '354950', '773840', '48465', '1070750', '4281',
            '47217', '49071', '49196', '1501585', '832101', '874716', '1598014', '49826', '1110803', '879169',
            '1699150', '50863', '1571949', '51143', '51434', '51644', '51253', '896878', '1035267', '914208', '1111928',
            '1478242', '1020569', '779152', '52988', '728535', '91419', '200406', '833444', '19617', '1043604', '54480',
            '55067', '91576', '1601046', '55785', '879101', '1506307', '319201', '1637459', '56873', '202058', '920148',
            '707549', '1679273', '1300514', '58492', '1336920', '920760', '59478', '59558', '1707925', '1335258',
            '1065696', '936468', '60086', '60667', '18926', '1489393', '36270', '101778', '1510295', '1278021',
            '1048286', '62709', '916076', '62996', '1141391', '891103', '63754', '63908', '927653', '1613103', '310158',
            '1099219', '1037646', '789570', '827054', '723125', '789019', '912595', '1682852', '851968', '24545',
            '1103982', '1280452', '865752', '1059556', '895421', '1285785', '68505', '1408198', '1120193', '1002047',
            '1065280', '814453', '1164727', '1564708', '1564708', '753308', '1492633', '320187', '1111711', '702165',
            '73124', '1133421', '849399', '1513761', '1013871', '73309', '1045810', '906163', '1413447', '898173',
            '797468', '878927', '29989', '1039684', '1341439', '1821825', '1781335', '75362', '75677', '76334',
            '723531', '1590955', '1633917', '921738', '77360', '1378946', '77476', '31791', '78003', '1413329',
            '1534701', '764622', '1038357', '713676', '945841', '79879', '922224', '1126328', '80424', '80661',
            '1045609', '1137774', '857005', '788784', '1393311', '822416', '78239', '1604778', '1050915', '804328',
            '1022079', '1037038', '720005', '101829', '726728', '910606', '872589', '1281761', '1060391', '943819',
            '315213', '1024478', '84839', '882835', '745732', '884887', '64040', '1108524', '1034054', '87347',
            '1137789', '1012100', '1032208', '1373715', '89800', '1063761', '4127', '91440', '92122', '92380', '93556',
            '829224', '93751', '1757898', '310764', '719739', '1601712', '883241', '96021', '1283699', '1113169',
            '946581', '1116132', '27419', '1385157', '1094285', '96943', '97210', '1318605', '97476', '217346', '97745',
            '109198', '916365', '1466258', '1260221', '86312', '864749', '92230', '1418091', '860731', '100493',
            '74208', '1403568', '36104', '1336917', '1336917', '100885', '100517', '731766', '1090727', '1067701',
            '352915', '1035002', '740260', '1014473', '1442145', '732712', '875320', '103379', '813828', '1792044',
            '1403161', '899689', '1396009', '11544', '943452', '104169', '1618921', '1744489', '823768', '1000697',
            '783325', '72971', '766704', '105770', '106040', '1365135', '1732845', '106535', '106640', '107263',
            '1140536', '1174922', '72903', '743988', '1524472', '1041061', '877212', '1136869', '109380', '1555280'])

from secedgar.cik_lookup import get_cik_map

lookups = get_cik_map()["ticker"]
ciks = set([lookups[ticker] for ticker in tickers])

lookups_inv_map = {v: k for k, v in lookups.items()}

from secedgar.core import CompanyFilings, FilingType, DailyFilings
from secedgar.exceptions import NoFilingsError, EDGARQueryError
from datetime import date
import datetime

for ticker in tickers:
    start = date(2021, 9, 1)


    def daily_filter(filing_entry):
        return filing_entry.cik == lookups[
            ticker] and filing_entry.form_type.lower() != "10-k" and filing_entry.form_type.lower() != "10-q"


    while start <= date(2021, 10, 29):
        print(ticker, start)
        my_filings = DailyFilings(date=start,
                                  user_agent="joey",
                                  entry_filter=daily_filter
                                  )
        start = start + datetime.timedelta(days=1)
        try:
            my_filings.save("./test")
        except (NoFilingsError, EDGARQueryError):
            continue
